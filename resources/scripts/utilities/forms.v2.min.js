import{Network}from"./network.v2.min.js";export const Forms={setup:(options,success=null,error=null)=>{if(null!=options.id)Forms.setupById(options,success,error);else if(null!=options.element)Forms.setupByElement(options,success,error);else if(null!=options.class)Forms.setupByClass(options,success,error);else{if(null==options.collection)throw Error("You must define id, element, class or collection to setup forms");Forms.setupByCollection(options,success,error)}},clean:(form,fields)=>{for(let field of fields)form.querySelector("#"+field).value=""},setupById:(options,success=null,error=null)=>{let form=document.getElementById(options.id);if(null==form)throw Error("No valid id provided on options");Forms.init(form,options,success,error)},setupByElement:(options,success=null,error=null)=>{if(!(options.element instanceof HTMLFormElement))throw Error("Element is not an HTMLFormElement");Forms.init(options.element,options,success,error)},setupByClass:(options,success=null,error=null)=>{let list=document.getElementsByClassName(options.class);if(list.length<=0)throw Error("No valid class provided on options");for(let form of list)Forms.init(form,options,success,error)},setupByCollection:(options,success=null,error=null)=>{if(options.collection.length<=0)throw Error("No elements provided on collection");for(let form of options.collection){if(!(form instanceof HTMLFormElement))throw Error("One or more elements on collection is not an HTMLFormElement");Forms.init(form,options,success,error)}},init:(form,options,success=null,error=null)=>{form.addEventListener("submit",event=>{event.preventDefault(),Forms.request(form,options,success,error)})},request:async(form,options,success,error)=>{try{if(null==options.endpoint)throw Error("No endpoint defined for request on options");let json=null!=options.json&&options.json,response=await Network.sendPOST({endpoint:options.endpoint,form:form,json:json});null!=success?success(response):console.log(response)}catch(ex){null!=error?error(ex.message):console.error(ex.message)}}};